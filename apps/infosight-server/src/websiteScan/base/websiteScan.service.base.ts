/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, WebsiteScan as PrismaWebsiteScan } from "@prisma/client";

export class WebsiteScanServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WebsiteScanCountArgs, "select">
  ): Promise<number> {
    return this.prisma.websiteScan.count(args);
  }

  async websiteScans(
    args: Prisma.WebsiteScanFindManyArgs
  ): Promise<PrismaWebsiteScan[]> {
    return this.prisma.websiteScan.findMany(args);
  }
  async websiteScan(
    args: Prisma.WebsiteScanFindUniqueArgs
  ): Promise<PrismaWebsiteScan | null> {
    return this.prisma.websiteScan.findUnique(args);
  }
  async createWebsiteScan(
    args: Prisma.WebsiteScanCreateArgs
  ): Promise<PrismaWebsiteScan> {
    return this.prisma.websiteScan.create(args);
  }
  async updateWebsiteScan(
    args: Prisma.WebsiteScanUpdateArgs
  ): Promise<PrismaWebsiteScan> {
    return this.prisma.websiteScan.update(args);
  }
  async deleteWebsiteScan(
    args: Prisma.WebsiteScanDeleteArgs
  ): Promise<PrismaWebsiteScan> {
    return this.prisma.websiteScan.delete(args);
  }
}
