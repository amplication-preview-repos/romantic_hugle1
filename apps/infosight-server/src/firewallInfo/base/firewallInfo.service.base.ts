/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, FirewallInfo as PrismaFirewallInfo } from "@prisma/client";

export class FirewallInfoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FirewallInfoCountArgs, "select">
  ): Promise<number> {
    return this.prisma.firewallInfo.count(args);
  }

  async firewallInfos(
    args: Prisma.FirewallInfoFindManyArgs
  ): Promise<PrismaFirewallInfo[]> {
    return this.prisma.firewallInfo.findMany(args);
  }
  async firewallInfo(
    args: Prisma.FirewallInfoFindUniqueArgs
  ): Promise<PrismaFirewallInfo | null> {
    return this.prisma.firewallInfo.findUnique(args);
  }
  async createFirewallInfo(
    args: Prisma.FirewallInfoCreateArgs
  ): Promise<PrismaFirewallInfo> {
    return this.prisma.firewallInfo.create(args);
  }
  async updateFirewallInfo(
    args: Prisma.FirewallInfoUpdateArgs
  ): Promise<PrismaFirewallInfo> {
    return this.prisma.firewallInfo.update(args);
  }
  async deleteFirewallInfo(
    args: Prisma.FirewallInfoDeleteArgs
  ): Promise<PrismaFirewallInfo> {
    return this.prisma.firewallInfo.delete(args);
  }
}
