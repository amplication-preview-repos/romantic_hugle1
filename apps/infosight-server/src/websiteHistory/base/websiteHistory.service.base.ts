/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, WebsiteHistory as PrismaWebsiteHistory } from "@prisma/client";

export class WebsiteHistoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WebsiteHistoryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.websiteHistory.count(args);
  }

  async websiteHistories(
    args: Prisma.WebsiteHistoryFindManyArgs
  ): Promise<PrismaWebsiteHistory[]> {
    return this.prisma.websiteHistory.findMany(args);
  }
  async websiteHistory(
    args: Prisma.WebsiteHistoryFindUniqueArgs
  ): Promise<PrismaWebsiteHistory | null> {
    return this.prisma.websiteHistory.findUnique(args);
  }
  async createWebsiteHistory(
    args: Prisma.WebsiteHistoryCreateArgs
  ): Promise<PrismaWebsiteHistory> {
    return this.prisma.websiteHistory.create(args);
  }
  async updateWebsiteHistory(
    args: Prisma.WebsiteHistoryUpdateArgs
  ): Promise<PrismaWebsiteHistory> {
    return this.prisma.websiteHistory.update(args);
  }
  async deleteWebsiteHistory(
    args: Prisma.WebsiteHistoryDeleteArgs
  ): Promise<PrismaWebsiteHistory> {
    return this.prisma.websiteHistory.delete(args);
  }
}
