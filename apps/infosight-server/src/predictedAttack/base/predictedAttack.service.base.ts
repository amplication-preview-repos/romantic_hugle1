/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PredictedAttack as PrismaPredictedAttack,
} from "@prisma/client";

export class PredictedAttackServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PredictedAttackCountArgs, "select">
  ): Promise<number> {
    return this.prisma.predictedAttack.count(args);
  }

  async predictedAttacks(
    args: Prisma.PredictedAttackFindManyArgs
  ): Promise<PrismaPredictedAttack[]> {
    return this.prisma.predictedAttack.findMany(args);
  }
  async predictedAttack(
    args: Prisma.PredictedAttackFindUniqueArgs
  ): Promise<PrismaPredictedAttack | null> {
    return this.prisma.predictedAttack.findUnique(args);
  }
  async createPredictedAttack(
    args: Prisma.PredictedAttackCreateArgs
  ): Promise<PrismaPredictedAttack> {
    return this.prisma.predictedAttack.create(args);
  }
  async updatePredictedAttack(
    args: Prisma.PredictedAttackUpdateArgs
  ): Promise<PrismaPredictedAttack> {
    return this.prisma.predictedAttack.update(args);
  }
  async deletePredictedAttack(
    args: Prisma.PredictedAttackDeleteArgs
  ): Promise<PrismaPredictedAttack> {
    return this.prisma.predictedAttack.delete(args);
  }
}
